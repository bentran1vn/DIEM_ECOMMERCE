version: '3.8'

services:
  diem-ecommerce-master-postgres:
    image: postgres:15-alpine
    container_name: diem-ecommerce-master-postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_DB: DiemEcommerceMaster
      # Replication settings
      POSTGRES_INITDB_ARGS: "--data-checksums"
    ports:
      - "5432:5432"
    networks:
      - diem-ecommerce-network
    volumes:
      - diem-ecommerce-master-data:/var/lib/postgresql/data
      - ./postgresql/master/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgresql/master/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    user: postgres
  
  diem-ecommerce-slave-postgres:
    image: postgres:15-alpine
    container_name: diem-ecommerce-slave-postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_DB: DiemEcommerceSlave
      # Replication settings
      POSTGRES_INITDB_ARGS: "--data-checksums"
    ports:
      - "5433:5432"
    networks:
      - diem-ecommerce-network
    volumes:
      - diem-ecommerce-slave-data:/var/lib/postgresql/data
      - ./postgresql/slave/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgresql/slave/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    user: postgres
    depends_on:
      - diem-ecommerce-master-postgres

  diem-ecommerce-redis:
    image: redis:alpine
    container_name: diem-ecommerce-redis
    restart: unless-stopped
    command: redis-server --requirepass ${DB_PASSWORD} --appendonly yes
    ports:
      - "6379:6379"
    networks:
      - diem-ecommerce-network
    volumes:
      - diem-ecommerce-redis-data:/data
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: 256M
        reservations:
          cpus: "0.10"
          memory: 128M

  diem-ecommerce-api:
    build:
      context: .
      dockerfile: DiemEcommerce.API/Dockerfile
    container_name: diem-ecommerce-api
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    ports:
      - "8080:8080"
    environment:
      ConnectionStrings__MasterConnection: Host=diem-ecommerce-master-postgres;Database=DiemEcommerceMaster;Username=postgres;Password=${DB_PASSWORD};
      ConnectionStrings__SlaveConnection: Host=diem-ecommerce-slave-postgres;Database=DiemEcommerceSlave;Username=postgres;Password=${DB_PASSWORD};
      ConnectionStrings__Redis: diem-ecommerce-redis:6379,password=${DB_PASSWORD}
      Logging__LogLevel__Default: Error
      Logging__LogLevel__Microsoft: Error
      Logging__LogLevel__Microsoft.AspNetCore: Error
      JwtOptions__SecretKey: ${JWT_SECRET}
      JwtOptions__Issuer: ${JWT_ISSUER}
      JwtOptions__Audience: ${JWT_AUDIENCE}
      JwtOptions__ExpireMinutes: 28800
      MailOption__Mail: ${MAIL}
      MailOption__Password: ${MAIL_PASSWORD}
      MailOption__Host: ${MAIL_HOST}
      MailOption__Port: ${MAIL_PORT}
      MailOption__DisplayName: ${MAIL_DISPLAY_NAME}
      CloudinaryOptions__CloudName: ${CLOUDINARY_CLOUD_NAME}
      CloudinaryOptions__ApiKey: ${CLOUDINARY_API_KEY}
      CloudinaryOptions__ApiSecret: ${CLOUDINARY_API_SECRET}
      AllowedHosts: "*"
    networks:
      - diem-ecommerce-network
    depends_on:
      - diem-ecommerce-master-postgres
      - diem-ecommerce-slave-postgres
      - diem-ecommerce-redis

volumes:
  diem-ecommerce-master-data:
    name: diem-ecommerce-master-data
    driver: local
  diem-ecommerce-slave-data:
    name: diem-ecommerce-slave-data
    driver: local
  diem-ecommerce-redis-data:
    name: diem-ecommerce-redis-data
    driver: local

networks:
  diem-ecommerce-network:
    name: diem-ecommerce-network
    driver: bridge
    ipam:
      driver: default